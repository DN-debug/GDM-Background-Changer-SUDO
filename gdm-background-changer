#!/bin/bash

# ======================================================================= #
# Original Author: Thiago Silva
# Author : DN-debug
# Description : This was originally designed by Thiago for Ubuntu/PopOS.
# Hence had to modify it to fit Archlinux. Uses Zenity for UI.

# Note: The script is not optmized to run without the frontend script
# Hence you might face some issues in standalone execution, depending
# upon your environment setup.
# ======================================================================= #


# Check if script is run by root.
# Important if this script is run without the frontend-script.
if [ "$(id -u)" -ne 0 ] ; then
    echo 'This script must be run as root or with the sudo command.'
    exit 1
fi


# Check if glib 2.0 development libraries are installed.
pkg=`pacman -Qq | grep glib2 | head -n1`

if [ "${pkg}" = "glib2" ]; then
    echo "Already installed"
else
    echo 'Additional glib 2.0 libraries needs to be installed.'
    zenity --question --title='GDM-Background-Changer' --text='Glib 2.0 development libraries are required' --ok-label='Install' --cancel-label='Abort' --width=500

    if [ $? = 0 ]; then
        pacman -Sy glib2
    else
        zenity --info --title="GDM-Background-Changer" --text="This tool can't run without required libraries. Exiting." --width=500

        exit 1
    fi
fi

# Assign the default gdm theme file path.
gdm3Resource=/usr/share/gnome-shell/gnome-shell-theme.gresource

# Create a backup file of the original theme if there isn't one.
[ ! -f "$gdm3Resource"~ ] && cp "$gdm3Resource" "$gdm3Resource~"

# Restore backup function.
restore () {
mv "$gdm3Resource~" "$gdm3Resource"
if [ "$?" -eq 0 ]; then
    chmod 644 "$gdm3Resource"

    # Zenity won't run without proper acl if you use pkexec
    # Hence relying on DOAS_ASKPASS written by Chris Noxz

    zenity --question --title='GDM-Background-Changer' --text='GDM background sucessfully restored. Do you want to restart gdm to apply change?' --ok-label='Yes' --cancel-label='No' --width=500

    # If change was successful apply ask for gdm restart.
    # User will be notified via frontend script

    if [ $? = 0 ]; then
        systemctl restart gdm
	else
	    exit 0
	fi

fi
}

# Restore the original gdm3 theme.
[ "$1" == "--restore" ] && restore

#Define main variables.
gdm3xml=$(basename "$gdm3Resource").xml
workDir="/tmp/gdm3-theme"

# Create directories from resource list.
CreateDirs() {
for resource in `gresource list "$gdm3Resource~"`; do
    resource="${resource#\/org\/gnome\/shell\/}"
    if [ ! -d "$workDir"/"${resource%/*}" ]; then
      mkdir -p "$workDir"/"${resource%/*}"
    fi
done
}

# Extract resources from binary file.
ExtractRes() {
for resource in `gresource list "$gdm3Resource~"`; do
    gresource extract "$gdm3Resource~" "$resource" > \
    "$workDir"/"${resource#\/org\/gnome\/shell\/}"
done
}

# Compile resources into a gresource binary file.
CompileRes() {
glib-compile-resources --sourcedir=$workDir/theme/ $workDir/theme/"$gdm3xml"
}

# Moves the newly created resource to its default place.
MoveRes() {
mv $workDir/theme/gnome-shell-theme.gresource $gdm3Resource
}

# Check if gresource was sucessfuly moved to its default folder.
Check() {
if [ "$?" -eq 0 ]; then
# Solve a permission change issue (thanks to @huepf from github).
    chmod 644 "$gdm3Resource"

    # Zenity won't run without proper acl if you use pkexec
    # Hence relying on DOAS_ASKPASS written by Chris Noxz

    zenity --question --title='GDM-Background-Changer' --text='GDM background sucessfully changed. Do you want to restart gdm to apply change?' --ok-label='Yes' --cancel-label='No' --width=500

    # If change was successful apply ask for gdm restart.
    # User will be notified via frontend script

    if [ $? = 0 ]; then
        systemctl restart gdm
    fi

else
    # If something went wrong, restore backup file.

    notify-send "something went wrong. No changes were applied." -i information
    restore
fi
}

CleanUp() {
    # Remove temporary directories and files.
    rm -r "$workDir"
    exit 0
}

# Test if argument is an image file.
# This is the secondary safe-lock to determine the file type.
# Important if this script is run without the frontend-script.
if [[ $(file --mime-type -b "$1") == image/*g ]]; then

    # Define image variables.
    gdmBgImg=$(realpath "$1")
    imgFile=$(basename "$gdmBgImg")

    # Call procedures to create directories and extract resources to them.
    CreateDirs
    ExtractRes

    # Copy selected image to the resources directory.
    cp "$gdmBgImg" "$workDir"/theme

    # Change gdm background to the image you submited.
    oldBg="#lockDialogGroup \{.*?\}"
    newBg="#lockDialogGroup {
	background: url('resource:\/\/\/org\/gnome\/shell\/theme\/$imgFile');
	background-size: cover; }"
    perl -i -0777 -pe "s/$oldBg/$newBg/s" "$workDir"/theme/gnome-shell.css

    # Generate gresource xml file.
    echo '<?xml version="1.0" encoding="UTF-8"?>
<gresources>
    <gresource prefix="/org/gnome/shell/theme">' > "$workDir"/theme/"$gdm3xml"
    for file in `gresource list "$gdm3Resource~"`; do
	echo "        <file>${file#\/org\/gnome/shell\/theme\/}</file>" \
	>> "$workDir"/theme/"$gdm3xml"
    done
    echo "        <file>$imgFile</file>" >> "$workDir"/theme/"$gdm3xml"
    echo '    </gresource>
</gresources>' >> "$workDir"/theme/"$gdm3xml"

    # Compile the new gresource.
    CompileRes

    # Move gresource to the default place.
    MoveRes

    # Check if everything was successful.
    Check

    # Remove temporary files and exit.
    CleanUp

# Change background colors.
elif [[ "$1" =~ ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$ ]]; then

    # Store selected background color.
    BgColor="$1"

    CreateDirs
    ExtractRes

    # Change gdm background to the color you submited.
    oldBg="#lockDialogGroup \{.*?\}"
    newBg="#lockDialogGroup {
	background: $BgColor;
	background-size: cover; }"
    perl -i -0777 -pe "s/$oldBg/$newBg/s" "$workDir"/theme/gnome-shell.css

    # Generate the gresource xml file.
    echo '<?xml version="1.0" encoding="UTF-8"?>
<gresources>
    <gresource prefix="/org/gnome/shell/theme">' > "$workDir"/theme/"$gdm3xml"
    for file in `gresource list "$gdm3Resource~"`; do
	echo "        <file>${file#\/org\/gnome/shell\/theme\/}</file>" \
	>> "$workDir"/theme/"$gdm3xml"
    done
    echo '    </gresource>
</gresources>' >> "$workDir"/theme/"$gdm3xml"

    # Compile the new gresource.
    CompileRes

    # Move gresource to the default place.
    MoveRes

    # Remove temporary files and exit.
    CleanUp

else

    # Throw error in case of a file other than image
    # File format should be .jpg and .png
    zenity --info --title="GDM-Background-Changer" --text="Please select a file with either .jpg or .png extension" --width=500

fi
